% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FHM.R
\name{spFastHike}
\alias{spFastHike}
\title{Fast Hiking Method on a spatial domain}
\usage{
spFastHike(dem, seeds, spatial.res, fun = "Tobler", verbose = T)
}
\arguments{
\item{dem}{A \code{\link[raster]{raster}} object of chosen dimension
and resolution with elevation data.}

\item{seeds}{A \code{\link[sp]{SpatialPointsDataFrame}} object containing
parameter values for each of the n seeds in its data.frame,
 in colums named exactly \emph{incept} (for incept time), \emph{off.path},
 \emph{horseback} (see Tobler's function). This object will be automatically
  transformed to the projection of \emph{domain}.}

\item{spatial.res}{(Optional) Spatial resolution of the raster in metres.
Defaults to that of the raster used.}

\item{fun}{(Optional) Hiking function to use, See \link{hiking.speed} for details.}

\item{verbose}{(Optional) Boolean to control verbose output.}
}
\description{
This function runs the Fast Hiking Method from \emph{sp} and
\emph{raster} objects and outputs results in the same formats, making
it more convenient for (geo)spatial analyses and simulation. Output
arrival time is in hours.
}
\examples{
library(raster); library(sp); library(rgdal)
domain <- raster(system.file("external/test.grd", package="raster")) # sample raster
coords <- cbind(c(179000,181200), c(330000, 333000)) # coordinates for seeds
seed.df <- data.frame(Id= c(1,2), incept=c(0,0)) # parameters for each seed
seeds <- SpatialPointsDataFrame(coords, seed.df, proj4string=crs(domain))

fh <- spFastHike(domain, seeds, verbose=FALSE)
par(mfrow=c(1,2), mar=c(1,1,1,3))
plot(domain); contour(fh$arrival.time, levels=seq(0.1,.5,0.2), add=TRUE)
plot(fh$process); contour(fh$arrival.time, levels=seq(0.1,.5,0.2), add=TRUE)
}
